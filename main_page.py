import streamlit as st
# from openai import OpenAI
import langchain
from langchain import PromptTemplate
from langchain.llms import OpenAI

openai_api_key = st.secrets["openai_api_key"]

st.markdown("<h1 style='text-align: center;'>Futuro Aprovado üìöüéì</h1>", unsafe_allow_html=True)
st.markdown("<h2 style='text-align: center;'>Fa√ßa parte da cria√ß√£o da nova maneira de estudar para concursos!</h2>", unsafe_allow_html=True)


template = """
Sua tarefa √© avaliar uma resposta para a seguinte quest√£o. Essa √© uma quest√£o discursiva de um
concurso para Analista de Gest√£o e Pol√≠ticas P√∫blicas da Prefeitura de S√£o Paulo.

Enunciado:

Voc√™ √© um Analista de Gest√£o e Pol√≠ticas P√∫blicas trabalhando para a Prefeitura de S√£o Paulo.
Atualmente, a cidade enfrenta desafios significativos relacionados ao crescimento urbano desordenado,
que resultou em problemas como tr√¢nsito intenso, polui√ß√£o e desigualdade social. Com base em seus
conhecimentos e experi√™ncia, elabore um plano estrat√©gico que aborde os seguintes pontos:

1) An√°lise de Problemas: Identifique e descreva tr√™s problemas urbanos cr√≠ticos resultantes do
crescimento desordenado em S√£o Paulo.
2) Estrat√©gias de Interven√ß√£o: Proporcione solu√ß√µes inovadoras e vi√°veis para cada um dos problemas 
identificados. Suas solu√ß√µes devem considerar fatores como sustentabilidade, inclus√£o social e 
viabilidade econ√¥mica.
3) Implementa√ß√£o e Avalia√ß√£o: Descreva como voc√™ implementaria essas solu√ß√µes, incluindo os
stakeholders envolvidos, recursos necess√°rios e um plano de avalia√ß√£o cont√≠nua para medir o
sucesso das interven√ß√µes.

Avalie a seguinte resposta:
{input}
"""

prompt = PromptTemplate(
    input_variables=["input"], ## "target"],
    template=template
)

def load_LLM():
    llm = OpenAI(temperature=0.7, openai_api_key=openai_api_key)
    return llm

llm = load_LLM()

option = st.selectbox(
    'Escolha uma quest√£o:',
    (1, 2, 3, 4, 5))

# Text input
st.write("Sua resposta deve ter no m√≠nimo 100 e no m√°ximo 500 palavras.")

user_input = st.text_area("Insira sua resposta:", height=100)



# Submit button
if st.button('Enviar'):
    word_count = len(user_input.split())

    # Check word count limits
    if 100 <= word_count <= 500:
        # Proceed with processing the submission
        # (e.g., sending it to a server or processing it further)
        st.success("Resposta enviada com sucesso!")

        # prompt_with_text = prompt.format(input=input, target=target)
        prompt_with_text = prompt.format(input=user_input)

        converted = llm(prompt_with_text)
        st.write (converted)
    else:
        # Display an error message
        st.error("Erro: O texto deve ter entre 100 e 500 palavras. Seu texto possui " + str(word_count) + " palavra(s).")


st.markdown(
    "Nossa equipe est√° empenhada em aumentar a velocidade de aprendizado \
    de quem estuda para concursos, utilizando as <b>mais recentes t√©cnicas de intelig√™ncia artificial</b>. \n\n"

    "Nosso projeto est√° em fase de testes iniciais, e <b>sua opini√£o √© muito importante</b> para adaptarmos \
    a plataforma as suas necessidades. [Deixe aqui](https://forms.gle/tWjz7d89J8qpCieC8) seu coment√°rio sobre como podemos melhorar.",
    unsafe_allow_html=True
)

